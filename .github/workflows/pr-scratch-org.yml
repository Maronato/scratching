name: Create scratch org for PR
on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

permissions:
  # Allow creating comments
  pull-requests: write

env:
  SF_CONSUMER_KEY: ${{ secrets.SF_CONSUMER_KEY }}
  SF_JWT_SECRET_KEY: ${{ secrets.SF_JWT_SECRET_KEY }}
  SF_DEVHUB_USERNAME: ${{ secrets.SF_DEVHUB_USERNAME }}
  SFDX_VERSION: 2.9.8
  NODE_VERSION: 18.17.1
  PNPM_VERSION: 8.7.5

jobs:
  gen_username:
    name: Generate scratch org username
    runs-on: ubuntu-latest
    outputs:
      username: pull-request-${{ steps.get_issue_number.outputs.result }}@scratch-ci.com
    steps:
      - name: Get PR number
        uses: actions/github-script@v6
        id: get_issue_number
        with:
          script: |
            if (context.issue.number) {
              // Return issue number if present
              return context.issue.number;
            } else {
              // Otherwise return issue number from commit
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0].number;
            }
          result-encoding: string

  delete:
    name: Delete PR scratch org
    if: ${{ github.event.action == 'reopened' || github.event.action == 'closed' }}
    needs: gen_username
    runs-on: ubuntu-latest
    env:
      SCRATCH_USERNAME: ${{ needs.gen_username.outputs.username }}
      RENAMED_USERNAME: deleted-${{ needs.gen_username.outputs.username }}
    steps:
      ############## Setup ##############
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/cache@v3
        with:
          path: /home/runner/setup-pnpm/node_modules/
          key: ${{ runner.os }}-pnpmcache-${{ env.NODE_VERSION }}-${{ env.PNPM_VERSION }}-sfdx-${{ env.SFDX_VERSION }}

      - name: Install sfdx
        run: pnpm install --global --prefer-offline @salesforce/cli@${{ env.SFDX_VERSION }}

      - name: Authenticate DevHub and scratch org
        # Authenticate to both devhub and scratch org so we can delete the scratch org
        run: |
          echo "${{ env.SF_JWT_SECRET_KEY }}" > server.key
          sf org login jwt --username=${{ env.SF_DEVHUB_USERNAME }} --jwt-key-file server.key --client-id=${{ env.SF_CONSUMER_KEY }} --set-default-dev-hub
          sf org login jwt --username=${{ env.SCRATCH_USERNAME }} --jwt-key-file server.key --client-id=${{ env.SF_CONSUMER_KEY }} --set-default

      ############## Delete ##############

      - name: Change scratch org username
        run: sf data update record --sobject User --where "Username=${{ env.SCRATCH_USERNAME }}" --values "Username=${{ env.RENAMED_USERNAME }}"

      - name: Authenticate new scratch org
        run: sf org login jwt --username=${{ env.RENAMED_USERNAME }} --jwt-key-file server.key --client-id=${{ env.SF_CONSUMER_KEY }} --set-default

      - name: Delete scratch org
        run: sf org delete scratch --target-org=${{ env.RENAMED_USERNAME }} --no-prompt

  create:
    name: Create PR scratch org
    # Only run on PR open or reopen.
    # We need the "success()" part so the job runs even when the previous job is skipped.
    if: ${{ (success() && github.event.action != 'closed') || github.event.action == 'opened' || github.event.action == 'reopened' }}
    needs:
      - delete
      - gen_username
    runs-on: ubuntu-latest
    env:
      SCRATCH_USERNAME: ${{ needs.gen_username.outputs.username }}
    steps:
      ############## Setup ##############
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/cache@v3
        with:
          path: /home/runner/setup-pnpm/node_modules/
          key: ${{ runner.os }}-pnpmcache-${{ env.NODE_VERSION }}-${{ env.PNPM_VERSION }}-sfdx-${{ env.SFDX_VERSION }}

      - name: Install sfdx
        run: pnpm install --global --prefer-offline @salesforce/cli@${{ env.SFDX_VERSION }}

      - name: Authenticate
        run: |
          echo "${{ env.SF_JWT_SECRET_KEY }}" > server.key
          sf org login jwt --username=${{ env.SF_DEVHUB_USERNAME }} --jwt-key-file server.key --client-id=${{ env.SF_CONSUMER_KEY }} --set-default-dev-hub

      ############## Create ##############

      - name: Create scratch org
        run: sf org create scratch --json --edition=developer --username=${{ env.SCRATCH_USERNAME }} --set-default --duration-days=14 | jq

      - name: Get login info
        id: get_login_info
        run: |
          data="$(sf org open --json --url-only)"
          echo username=$(echo $data | jq -r .result.username) >> "$GITHUB_OUTPUT"
          echo url=$(echo $data | jq -r .result.url) >> "$GITHUB_OUTPUT"
          echo id=$(echo $data | jq -r .result.orgId) >> "$GITHUB_OUTPUT"

      - name: Comment login url
        uses: actions/github-script@v6
        env:
          ORG_USERNAME: ${{ steps.get_login_info.outputs.username }}
          ORG_URL: ${{ steps.get_login_info.outputs.url }}
          ORG_ID: ${{ steps.get_login_info.outputs.id }}
        with:
          script: |
            const { ORG_USERNAME, ORG_URL, ORG_ID } = process.env

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### üöÄ **Scratch org created!**
               - Org ID: ${ORG_ID}
               - Username: ${ORG_USERNAME}
               - Link: ${ORG_URL}
              
              **Instructions**
               - Use it perform tests and QA
               - Pushes to this PR will be deployed automatically
               - It'll be deleted automatically after 14 days or when the PR is closed`
            })

  deploy:
    name: Deploy to PR scratch org
    # Only run on PR sync (i.e. new commits pushed to PR)
    if: ${{ github.event.action == 'synchronize' }}
    runs-on: ubuntu-latest
    needs:
      - gen_username
    env:
      SCRATCH_USERNAME: ${{ needs.gen_username.outputs.username }}
    steps:
      ############## Setup ##############
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/cache@v3
        with:
          path: /home/runner/setup-pnpm/node_modules/
          key: ${{ runner.os }}-pnpmcache-${{ env.NODE_VERSION }}-${{ env.PNPM_VERSION }}-sfdx-${{ env.SFDX_VERSION }}

      - name: Install sfdx
        run: pnpm install --global --prefer-offline @salesforce/cli@${{ env.SFDX_VERSION }}

      - name: Authenticate
        run: |
          echo "${{ env.SF_JWT_SECRET_KEY }}" > server.key
          sf org login jwt --username=${{ env.SCRATCH_USERNAME }} --jwt-key-file server.key --client-id=${{ env.SF_CONSUMER_KEY }} --set-default

      ############## Deploy ##############

      - name: Deploy source
        run: sf project deploy start

      - name: Comment deployment
        uses: actions/github-script@v6
        env:
          SHA: ${{ github.event.pull_request.head.sha }}
        with:
          script: |
            const { SHA } = process.env

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚òÅÔ∏è Synced to commit ${SHA}`
            })
